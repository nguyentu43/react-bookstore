[{"D:\\frontend-2\\src\\serviceWorker.js":"1","D:\\frontend-2\\src\\pages\\Store\\Index.js":"2","D:\\frontend-2\\src\\pages\\Store\\Single.js":"3","D:\\frontend-2\\src\\App.js":"4","D:\\frontend-2\\src\\pages\\Store\\Search.js":"5","D:\\frontend-2\\src\\pages\\Store\\Cart.js":"6","D:\\frontend-2\\src\\components\\Store\\BannerCarousel.js":"7","D:\\frontend-2\\src\\components\\ColorModeSwitcher.js":"8","D:\\frontend-2\\src\\components\\Store\\LeftMenu.js":"9","D:\\frontend-2\\src\\index.js":"10","D:\\frontend-2\\src\\pages\\Store\\Layout.js":"11","D:\\frontend-2\\src\\components\\Store\\BlockLayout.js":"12","D:\\frontend-2\\src\\components\\Store\\Product.js":"13","D:\\frontend-2\\src\\components\\Store\\DealProduct.js":"14","D:\\frontend-2\\src\\components\\Store\\Author.js":"15","D:\\frontend-2\\src\\reportWebVitals.js":"16","D:\\frontend-2\\src\\pages\\Store\\Checkout.js":"17","D:\\frontend-2\\src\\pages\\Store\\Route.js":"18","D:\\frontend-2\\src\\pages\\Store\\Login.js":"19","D:\\frontend-2\\src\\pages\\Store\\Register.js":"20","D:\\frontend-2\\src\\components\\Store\\Wrapper\\CarouselWrapper.js":"21","D:\\frontend-2\\src\\components\\Store\\Nav\\BottomNav.js":"22","D:\\frontend-2\\src\\components\\Store\\Nav\\TopNav.js":"23","D:\\frontend-2\\src\\components\\Store\\Drawer\\RightDrawer.js":"24","D:\\frontend-2\\src\\components\\Store\\Footer\\BottomFooter.js":"25","D:\\frontend-2\\src\\components\\Store\\Block\\BestSellingBlock.js":"26","D:\\frontend-2\\src\\components\\Store\\Block\\FeaturedBookBlock.js":"27","D:\\frontend-2\\src\\components\\Store\\Block\\NewReleaseBlock.js":"28","D:\\frontend-2\\src\\components\\Store\\Block\\FavouriteAuthorBlock.js":"29","D:\\frontend-2\\src\\components\\Store\\Block\\FeaturedCategoryBlock.js":"30","D:\\frontend-2\\src\\components\\Store\\Block\\WeekDealBlock.js":"31","D:\\frontend-2\\src\\components\\Store\\Drawer\\LeftDrawer.js":"32","D:\\frontend-2\\src\\pages\\Store\\ForgotPassword.js":"33","D:\\frontend-2\\src\\components\\Store\\Rating.js":"34","D:\\frontend-2\\src\\components\\Store\\Nav\\Breadcrumb.js":"35","D:\\frontend-2\\src\\components\\Store\\ShortedProduct.js":"36","D:\\frontend-2\\src\\components\\Store\\Block\\SupportInfoBlock.js":"37","D:\\frontend-2\\src\\components\\Table.js":"38","D:\\frontend-2\\src\\components\\Store\\Form\\AddProductForm.js":"39","D:\\frontend-2\\src\\components\\Store\\Form\\RegisterForm.js":"40","D:\\frontend-2\\src\\components\\Store\\Block\\ShortedCartBlock.js":"41","D:\\frontend-2\\src\\components\\Store\\Form\\PromoCodeForm.js":"42","D:\\frontend-2\\src\\components\\Store\\Form\\RequestPasswordForm.js":"43","D:\\frontend-2\\src\\components\\Store\\Form\\ResetPasswordForm.js":"44","D:\\frontend-2\\src\\components\\Store\\Form\\CheckoutForm.js":"45","D:\\frontend-2\\src\\components\\Store\\Form\\LoginForm.js":"46","D:\\frontend-2\\src\\components\\Store\\Block\\FilterBlock.js":"47","D:\\frontend-2\\src\\components\\Store\\Block\\FeaturedShortedProductBlock.js":"48","D:\\frontend-2\\src\\pages\\Store\\List.js":"49","D:\\frontend-2\\src\\pages\\Admin\\Route.js":"50","D:\\frontend-2\\src\\pages\\Admin\\Layout.js":"51","D:\\frontend-2\\src\\components\\Admin\\Nav\\LeftNav.js":"52","D:\\frontend-2\\src\\components\\Admin\\Nav\\TopNav.js":"53","D:\\frontend-2\\src\\pages\\Admin\\Dashboard.js":"54","D:\\frontend-2\\src\\components\\Store\\Footer\\TopFooter.js":"55","D:\\frontend-2\\src\\components\\Admin\\BlockLayout.js":"56","D:\\frontend-2\\src\\pages\\Admin\\Gallery.js":"57","D:\\frontend-2\\src\\pages\\Admin\\Category.js":"58","D:\\frontend-2\\src\\components\\ConfirmButton.js":"59","D:\\frontend-2\\src\\hocs\\customInput.js":"60","D:\\frontend-2\\src\\pages\\Admin\\Author.js":"61","D:\\frontend-2\\src\\components\\Gallery.js":"62","D:\\frontend-2\\src\\components\\Admin\\GalleryModal.js":"63","D:\\frontend-2\\src\\pages\\Admin\\User.js":"64","D:\\frontend-2\\src\\pages\\Admin\\Order.js":"65","D:\\frontend-2\\src\\graphqlClient.js":"66","D:\\frontend-2\\src\\pages\\Admin\\Product.js":"67","D:\\frontend-2\\src\\components\\Admin\\Form\\ProductEditForm.js":"68","D:\\frontend-2\\src\\components\\Admin\\ImagePicker.js":"69","D:\\frontend-2\\src\\components\\Admin\\Form\\OrderEditForm.js":"70","D:\\frontend-2\\src\\components\\Admin\\ProductPicker.js":"71","D:\\frontend-2\\src\\context.js":"72","D:\\frontend-2\\src\\api.js":"73"},{"size":5081,"mtime":1606666564410,"results":"74","hashOfConfig":"75"},{"size":2775,"mtime":1607616646440,"results":"76","hashOfConfig":"75"},{"size":5070,"mtime":1607617431835,"results":"77","hashOfConfig":"75"},{"size":1767,"mtime":1607527239376,"results":"78","hashOfConfig":"75"},{"size":1832,"mtime":1607624777082,"results":"79","hashOfConfig":"75"},{"size":4228,"mtime":1607531621088,"results":"80","hashOfConfig":"75"},{"size":1394,"mtime":1606936162719,"results":"81","hashOfConfig":"75"},{"size":623,"mtime":1606719336132,"results":"82","hashOfConfig":"75"},{"size":1933,"mtime":1607598863201,"results":"83","hashOfConfig":"75"},{"size":1025,"mtime":1607527261198,"results":"84","hashOfConfig":"75"},{"size":1114,"mtime":1607536043803,"results":"85","hashOfConfig":"75"},{"size":793,"mtime":1607617743548,"results":"86","hashOfConfig":"75"},{"size":1987,"mtime":1607619253046,"results":"87","hashOfConfig":"75"},{"size":1548,"mtime":1607616189317,"results":"88","hashOfConfig":"75"},{"size":355,"mtime":1607597799860,"results":"89","hashOfConfig":"75"},{"size":362,"mtime":1606666564410,"results":"90","hashOfConfig":"75"},{"size":924,"mtime":1606923002013,"results":"91","hashOfConfig":"75"},{"size":1138,"mtime":1606938715983,"results":"92","hashOfConfig":"75"},{"size":402,"mtime":1606900327049,"results":"93","hashOfConfig":"75"},{"size":412,"mtime":1606900327049,"results":"94","hashOfConfig":"75"},{"size":1605,"mtime":1607598317555,"results":"95","hashOfConfig":"75"},{"size":2129,"mtime":1607617991654,"results":"96","hashOfConfig":"75"},{"size":1278,"mtime":1606846018032,"results":"97","hashOfConfig":"75"},{"size":1403,"mtime":1607527330424,"results":"98","hashOfConfig":"75"},{"size":2864,"mtime":1606900630210,"results":"99","hashOfConfig":"75"},{"size":545,"mtime":1607615029576,"results":"100","hashOfConfig":"75"},{"size":1613,"mtime":1607615517717,"results":"101","hashOfConfig":"75"},{"size":2046,"mtime":1607616581143,"results":"102","hashOfConfig":"75"},{"size":509,"mtime":1607598124620,"results":"103","hashOfConfig":"75"},{"size":1178,"mtime":1607614966327,"results":"104","hashOfConfig":"75"},{"size":544,"mtime":1607616214154,"results":"105","hashOfConfig":"75"},{"size":751,"mtime":1607535806066,"results":"106","hashOfConfig":"75"},{"size":663,"mtime":1606900327049,"results":"107","hashOfConfig":"75"},{"size":138,"mtime":1606762472060,"results":"108","hashOfConfig":"75"},{"size":1068,"mtime":1607617565252,"results":"109","hashOfConfig":"75"},{"size":943,"mtime":1607616859312,"results":"110","hashOfConfig":"75"},{"size":1335,"mtime":1607287545813,"results":"111","hashOfConfig":"75"},{"size":4012,"mtime":1607530445443,"results":"112","hashOfConfig":"75"},{"size":1750,"mtime":1607616882660,"results":"113","hashOfConfig":"75"},{"size":1981,"mtime":1606926956839,"results":"114","hashOfConfig":"75"},{"size":1816,"mtime":1606927246417,"results":"115","hashOfConfig":"75"},{"size":1013,"mtime":1606927027548,"results":"116","hashOfConfig":"75"},{"size":1098,"mtime":1606927027548,"results":"117","hashOfConfig":"75"},{"size":1165,"mtime":1606927027548,"results":"118","hashOfConfig":"75"},{"size":6307,"mtime":1606927027548,"results":"119","hashOfConfig":"75"},{"size":2579,"mtime":1607528161826,"results":"120","hashOfConfig":"75"},{"size":4131,"mtime":1607624470255,"results":"121","hashOfConfig":"75"},{"size":740,"mtime":1607617409227,"results":"122","hashOfConfig":"75"},{"size":576,"mtime":1606935367414,"results":"123","hashOfConfig":"75"},{"size":1139,"mtime":1607340693570,"results":"124","hashOfConfig":"75"},{"size":1439,"mtime":1607117522832,"results":"125","hashOfConfig":"75"},{"size":1768,"mtime":1607117599085,"results":"126","hashOfConfig":"75"},{"size":888,"mtime":1606944092232,"results":"127","hashOfConfig":"75"},{"size":5724,"mtime":1607284418414,"results":"128","hashOfConfig":"75"},{"size":683,"mtime":1606760463962,"results":"129","hashOfConfig":"75"},{"size":395,"mtime":1607524655128,"results":"130","hashOfConfig":"75"},{"size":254,"mtime":1607367627344,"results":"131","hashOfConfig":"75"},{"size":2194,"mtime":1607283835426,"results":"132","hashOfConfig":"75"},{"size":1562,"mtime":1607340148369,"results":"133","hashOfConfig":"75"},{"size":2284,"mtime":1607284753993,"results":"134","hashOfConfig":"75"},{"size":2281,"mtime":1607283856207,"results":"135","hashOfConfig":"75"},{"size":3914,"mtime":1607431738793,"results":"136","hashOfConfig":"75"},{"size":590,"mtime":1607429437613,"results":"137","hashOfConfig":"75"},{"size":2103,"mtime":1607284791538,"results":"138","hashOfConfig":"75"},{"size":1989,"mtime":1607431915590,"results":"139","hashOfConfig":"75"},{"size":537,"mtime":1607525176683,"results":"140","hashOfConfig":"75"},{"size":2609,"mtime":1607373678187,"results":"141","hashOfConfig":"75"},{"size":8531,"mtime":1607430232689,"results":"142","hashOfConfig":"75"},{"size":1359,"mtime":1607431485178,"results":"143","hashOfConfig":"75"},{"size":2988,"mtime":1607439371742,"results":"144","hashOfConfig":"75"},{"size":1671,"mtime":1607439412161,"results":"145","hashOfConfig":"75"},{"size":1124,"mtime":1607531478790,"results":"146","hashOfConfig":"75"},{"size":1944,"mtime":1607622211292,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"w4chew",{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"159"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"188"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"159"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"166"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"198"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"159"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"166"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"159"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"166"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"159"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"166"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"166"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"159"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"159"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"166"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\frontend-2\\src\\serviceWorker.js",[],["320","321"],"D:\\frontend-2\\src\\pages\\Store\\Index.js",["322"],"D:\\frontend-2\\src\\pages\\Store\\Single.js",["323","324","325","326","327","328"],"import Breadcrumb from '../../components/Store/Nav/Breadcrumb';\r\nimport BlockLayout from '../../components/Store/BlockLayout';\r\nimport {\r\n  Box,\r\n  GridItem,\r\n  Heading,\r\n  HStack,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  ListIcon,\r\n  ListItem,\r\n  SimpleGrid,\r\n  Stack,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { FcContacts, FcBookmark } from 'react-icons/fc';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport AddProductForm from '../../components/Store/Form/AddProductForm';\r\nimport { FaHeart, FaShare } from 'react-icons/fa';\r\nimport CarouselWrapper from '../../components/Store/Wrapper/CarouselWrapper';\r\nimport FeaturedShortedProductBlock from '../../components/Store/Block/FeaturedShortedProductBlock';\r\nimport SupportInfoBlock from '../../components/Store/Block/SupportInfoBlock';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { fetchProduct, fetchProducts } from '../../api';\r\nimport { useEffect, useState } from 'react';\r\nimport Product from '../../components/Store/Product';\r\n\r\nexport default function Single() {\r\n  const { slug } = useParams();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  const [relatedProducts, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const { product } = await fetchProduct({ slug });\r\n        const { products } = await fetchProducts({\r\n          search: 'category=' + product.category.id,\r\n          limit: 10,\r\n        });\r\n        setProduct(product);\r\n        setProducts(products);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!product) {\r\n    return 'loading......';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb category={product.category} />\r\n      <BlockLayout>\r\n        <SimpleGrid columns={[1, 1, 1, 3]} gap={20}>\r\n          <GridItem colSpan={[1, 1, 1, 2]} justifyContent=\"stretch\">\r\n            <SimpleGrid columns={[1, 1, 1, 2]} gap={8} mb={12}>\r\n              <Stack width={[200, 250, 350]} justifySelf=\"center\">\r\n                <CarouselWrapper responsive={null}>\r\n                  {product.images.map(image => (\r\n                    <Image src={image.secure_url} objectFit=\"contain\" />\r\n                  ))}\r\n                </CarouselWrapper>\r\n              </Stack>\r\n              <VStack spacing={4} align=\"stretch\" textAlign=\"left\">\r\n                <Heading>{product.name}</Heading>\r\n                <Text>\r\n                  By (author) {product.authors.map(a => a.name).join(', ')}\r\n                </Text>\r\n                <Text fontSize=\"3xl\">\r\n                  <CurrencyFormat\r\n                    value={product.price * (1 - product.discount)}\r\n                    displayType={'text'}\r\n                    thousandSeparator={true}\r\n                    prefix={'$'}\r\n                  />\r\n                  {product.discount > 0 && (\r\n                    <>\r\n                      <br />\r\n                      <Text as=\"s\" fontSize=\"xl\">\r\n                        <CurrencyFormat\r\n                          value={product.price}\r\n                          displayType={'text'}\r\n                          thousandSeparator={true}\r\n                          prefix={'$'}\r\n                        />\r\n                      </Text>\r\n                    </>\r\n                  )}\r\n                </Text>\r\n                <Text noOfLines={4}>{product.description}</Text>\r\n\r\n                <AddProductForm id={product.id} />\r\n              </VStack>\r\n            </SimpleGrid>\r\n\r\n            <Box borderTopWidth={1} pt={8}>\r\n              <Tabs isFitted variant=\"enclosed\">\r\n                <TabList>\r\n                  <Tab>Description</Tab>\r\n                  <Tab>Product Details</Tab>\r\n                </TabList>\r\n\r\n                <TabPanels>\r\n                  <TabPanel>{product.description}</TabPanel>\r\n                  <TabPanel>\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListIcon w={10} h={10} as={FcBookmark} />\r\n                        Category: {product.category.name}\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListIcon w={10} h={10} as={FcContacts} />\r\n                        Author: {product.authors.map(a => a.name).join(', ')}\r\n                      </ListItem>\r\n                    </List>\r\n                  </TabPanel>\r\n                </TabPanels>\r\n              </Tabs>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem colSpan={1}>\r\n            <FeaturedShortedProductBlock />\r\n            <Box mt={8}>\r\n              <SupportInfoBlock />\r\n            </Box>\r\n          </GridItem>\r\n        </SimpleGrid>\r\n      </BlockLayout>\r\n      <BlockLayout blockName=\"Related Products\">\r\n        <CarouselWrapper slidesToShow={5} dots={false} arrows={true}>\r\n          {relatedProducts.map(item => (\r\n            <Product inSlider={true} {...item} key={item.id} />\r\n          ))}\r\n        </CarouselWrapper>\r\n      </BlockLayout>\r\n    </>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\App.js",["329"],"import React from 'react';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\n\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport StoreRoute from './pages/Store/Route';\r\nimport AdminRoute from './pages/Admin/Route';\r\nimport { extendTheme } from '@chakra-ui/react';\r\nimport { createBreakpoints } from '@chakra-ui/theme-tools';\r\nimport { Elements as StripeElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { fetchUserInfo } from './api';\r\nimport { useEffect } from 'react';\r\nimport { useAppContext } from './context';\r\n\r\nconst breakpoints = createBreakpoints({\r\n  sm: '578px',\r\n  md: '768px',\r\n  lg: '992px',\r\n  xl: '1200px',\r\n});\r\n\r\nconst theme = extendTheme({ breakpoints });\r\n\r\nconst publicKey =\r\n  'pk_test_51HqzdDEEA28cbsApAzfDLBCRMMwZbMeyDy1mDVRfSzOblaXMy0BCAFbAWEGEvgWHsIr2AXYbEsyKmFxn6sIMjjMy00dp59zFwT';\r\nconst stripePromise = loadStripe(publicKey);\r\n\r\nfunction App() {\r\n  const { dispatch } = useAppContext();\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const { user, cart } = await fetchUserInfo();\r\n      dispatch({ type: 'SET_AUTH', payload: { ...user, isLogin: true } });\r\n      dispatch({ type: 'SET_CART', payload: cart });\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <StripeElements stripe={stripePromise}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/store\" component={StoreRoute} />\r\n            <Route path=\"/admin\" component={AdminRoute} />\r\n            <Redirect to=\"/store\" />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </StripeElements>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["330","331"],"D:\\frontend-2\\src\\pages\\Store\\Search.js",["332","333","334","335","336","337"],"import {\r\n  Button,\r\n  GridItem,\r\n  HStack,\r\n  Select,\r\n  SimpleGrid,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { fetchProducts } from '../../api';\r\nimport FilterBlock from '../../components/Store/Block/FilterBlock';\r\nimport BlockLayout from '../../components/Store/BlockLayout';\r\nimport Product from '../../components/Store/Product';\r\n\r\nexport default function Search() {\r\n  const { location } = useHistory();\r\n  const [products, setProducts] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const limit = 12;\r\n\r\n  async function fetchData(init = false) {\r\n    const data = await fetchProducts({\r\n      search: location.search && location.search.substr(1),\r\n      offset: products.length,\r\n      limit,\r\n    });\r\n    if (init) {\r\n      setProducts(data.products);\r\n    } else {\r\n      setProducts(products.concat(data.products));\r\n    }\r\n    setHasMore(data.products.length < limit);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(true);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <BlockLayout>\r\n      <SimpleGrid columns={[1, 1, 1, 4]} gap={8}>\r\n        <GridItem>\r\n          <FilterBlock />\r\n        </GridItem>\r\n        <GridItem colSpan={[1, 1, 1, 3]}>\r\n          <HStack mb={6} w={200}>\r\n            <Select>\r\n              <option value=\"short\">Default sort</option>\r\n            </Select>\r\n          </HStack>\r\n          <SimpleGrid\r\n            borderTopWidth={1}\r\n            borderLeftWidth={1}\r\n            columns={[1, 2, 3, 4]}\r\n          >\r\n            {products.map(item => (\r\n              <Product key={item.id} {...item} />\r\n            ))}\r\n          </SimpleGrid>\r\n        </GridItem>\r\n      </SimpleGrid>\r\n    </BlockLayout>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\pages\\Store\\Cart.js",["338"],"import {\r\n  Button,\r\n  Heading,\r\n  HStack,\r\n  Icon,\r\n  IconButton,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { useMemo, useState } from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { FaCheck, FaTimes } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { addItemToCart, removeItemFromCart } from '../../api';\r\nimport BlockLayout from '../../components/Store/BlockLayout';\r\nimport ShortedProduct from '../../components/Store/ShortedProduct';\r\nimport Table from '../../components/Table';\r\nimport { useAppContext } from '../../context';\r\n\r\nfunction QuantityInput({ quantity, id, changeQuantity }) {\r\n  const [value, setValue] = useState(quantity);\r\n\r\n  function handleUpdateQuantity() {\r\n    changeQuantity(Number(value), id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NumberInput\r\n        defaultValue={1}\r\n        onChange={e => setValue(e)}\r\n        min={1}\r\n        value={value}\r\n        w={70}\r\n        size=\"sm\"\r\n      >\r\n        <NumberInputField />\r\n        <NumberInputStepper>\r\n          <NumberIncrementStepper />\r\n          <NumberDecrementStepper />\r\n        </NumberInputStepper>\r\n      </NumberInput>\r\n      <IconButton\r\n        size=\"sm\"\r\n        onClick={handleUpdateQuantity}\r\n        colorScheme=\"green\"\r\n        icon={<Icon as={FaCheck} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Cart() {\r\n  const {\r\n    state: {\r\n      cart: { items, total },\r\n    },\r\n    dispatch,\r\n  } = useAppContext();\r\n\r\n  function setCart(items) {\r\n    dispatch({ type: 'SET_CART', payload: items });\r\n  }\r\n\r\n  async function changeQuantity(quantity, id) {\r\n    try {\r\n      const { cart } = await addItemToCart({ input: { quantity, id } });\r\n      setCart(cart);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  async function deleteProduct(productID) {\r\n    try {\r\n      const { cart } = await removeItemFromCart({ productID });\r\n      setCart(cart);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      { Header: 'Quantity', accessor: 'quantity' },\r\n      {\r\n        Header: 'Product',\r\n        id: 'product',\r\n        Cell: ({ row: { original } }) => <ShortedProduct {...original} />,\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        id: 'price',\r\n        accessor: 'price',\r\n        Cell: ({\r\n          value,\r\n          row: {\r\n            original: { discount, quantity },\r\n          },\r\n        }) => (\r\n          <Heading size=\"lg\">\r\n            <CurrencyFormat\r\n              value={value * (1 - discount) * quantity}\r\n              displayType={'text'}\r\n              decimalScale={2}\r\n              thousandSeparator={true}\r\n              prefix={'$'}\r\n            />\r\n          </Heading>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        id: 'action',\r\n        accessor: 'id',\r\n        Cell: ({\r\n          value,\r\n          row: {\r\n            original: { quantity },\r\n          },\r\n          deleteProduct,\r\n          changeQuantity,\r\n        }) => (\r\n          <HStack>\r\n            <QuantityInput\r\n              quantity={quantity}\r\n              id={value}\r\n              changeQuantity={changeQuantity}\r\n            />\r\n            <IconButton\r\n              size=\"sm\"\r\n              colorScheme=\"red\"\r\n              onClick={() => deleteProduct(value)}\r\n              icon={<Icon as={FaTimes} />}\r\n            />\r\n          </HStack>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = useMemo(() => items, [items]);\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Cart\">\r\n      <Table\r\n        minW={600}\r\n        columns={columns}\r\n        action={{ changeQuantity, deleteProduct }}\r\n        data={data}\r\n        showPagination={false}\r\n      />\r\n      <Heading mt={4} textAlign=\"right\">\r\n        Total:{' '}\r\n        <CurrencyFormat\r\n          value={total}\r\n          displayType={'text'}\r\n          decimalScale={2}\r\n          thousandSeparator={true}\r\n          prefix={'$'}\r\n        />\r\n      </Heading>\r\n      <Button mt={4} as={Link} to=\"/store/checkout\" colorScheme=\"red\">\r\n        Checkout\r\n      </Button>\r\n    </BlockLayout>\r\n  );\r\n}\r\n",["339","340"],"D:\\frontend-2\\src\\components\\Store\\BannerCarousel.js",[],"D:\\frontend-2\\src\\components\\ColorModeSwitcher.js",[],"D:\\frontend-2\\src\\components\\Store\\LeftMenu.js",["341"],"import { VStack, Text, Icon, Flex, useDisclosure } from '@chakra-ui/react';\r\nimport { useState } from 'react';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\n\r\nconst stack = [];\r\nconst prevItemStack = [];\r\n\r\nexport default function LeftMenu({categories}) {\r\n\r\n  const [items, setItems] = useState([...categories]);\r\n  const [prevItem, setPrevItem] = useState(null);\r\n\r\n  function handleClick(item) {\r\n\r\n    if(item.children.length > 0){\r\n      stack.push(items);\r\n      prevItemStack.push(item);\r\n      setItems(item.children);\r\n      setPrevItem(item);\r\n    }\r\n  }\r\n\r\n  function handlePrevClick() {\r\n    setItems(stack.pop());\r\n\r\n    if(prevItemStack.length === 1){\r\n        prevItemStack.pop();\r\n        setPrevItem(null);\r\n        return;\r\n    }\r\n    prevItemStack.pop();\r\n    setPrevItem(prevItemStack[prevItemStack.length - 1]);\r\n  }\r\n\r\n  return (\r\n    <VStack align=\"stretch\" spacing={3}>\r\n      {prevItem && (\r\n        <Flex\r\n          onClick={handlePrevClick}\r\n          _hover={{ cursor: 'pointer' }}\r\n          align=\"center\"\r\n        >\r\n          <Icon mr={2} as={FaChevronLeft} />\r\n          <Text>{prevItem.name}</Text>\r\n        </Flex>\r\n      )}\r\n      {\r\n        items.map(item => {\r\n          return (\r\n            <Flex\r\n              onClick={() => handleClick(item)}\r\n              _hover={{ cursor: 'pointer' }}\r\n              key={item.id}\r\n              align=\"center\"\r\n              justify=\"space-between\"\r\n            >\r\n              <Text>{item.name}</Text>\r\n              {item.children.length >0 && <Icon as={FaChevronRight} />}\r\n            </Flex>\r\n          );\r\n        })}\r\n        {items.length > 0 && <Flex\r\n              onClick={() => handleClick({ id: prevItem })}\r\n              _hover={{ cursor: 'pointer' }}\r\n              align=\"center\"\r\n              justify=\"space-between\"\r\n            >\r\n              <Text>Rest</Text>\r\n            </Flex>}\r\n    </VStack>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\index.js",[],"D:\\frontend-2\\src\\pages\\Store\\Layout.js",[],"D:\\frontend-2\\src\\components\\Store\\BlockLayout.js",[],"D:\\frontend-2\\src\\components\\Store\\Product.js",["342","343"],"D:\\frontend-2\\src\\components\\Store\\DealProduct.js",[],"D:\\frontend-2\\src\\components\\Store\\Author.js",[],"D:\\frontend-2\\src\\reportWebVitals.js",[],["344","345"],"D:\\frontend-2\\src\\pages\\Store\\Checkout.js",["346"],"import { GridItem, Heading, HStack, SimpleGrid } from \"@chakra-ui/react\";\r\nimport ShortedCartBlock from \"../../components/Store/Block/ShortedCartBlock\";\r\nimport BlockLayout from \"../../components/Store/BlockLayout\";\r\nimport CheckoutForm from \"../../components/Store/Form/CheckoutForm\";\r\nimport PromoCodeForm from \"../../components/Store/Form/PromoCodeForm\";\r\n\r\nexport default function Checkout(){\r\n    return <BlockLayout blockName=\"Checkout\">\r\n        <SimpleGrid columns={[1,1,3]} gap={8}>\r\n            <GridItem colSpan={[1,1,2]}>\r\n                <Heading mb={4} size=\"lg\">Billing Address</Heading>\r\n                <CheckoutForm />\r\n            </GridItem>\r\n            <GridItem colSpan={1} order={[-1, -1, 2]}>\r\n                <Heading mb={4} size=\"lg\">Your Cart</Heading>\r\n                <ShortedCartBlock/>\r\n                <PromoCodeForm />\r\n            </GridItem>\r\n        </SimpleGrid>\r\n    </BlockLayout>;\r\n}","D:\\frontend-2\\src\\pages\\Store\\Route.js",[],"D:\\frontend-2\\src\\pages\\Store\\Login.js",[],"D:\\frontend-2\\src\\pages\\Store\\Register.js",[],["347","348"],"D:\\frontend-2\\src\\components\\Store\\Wrapper\\CarouselWrapper.js",[],"D:\\frontend-2\\src\\components\\Store\\Nav\\BottomNav.js",["349","350","351","352","353","354"],"D:\\frontend-2\\src\\components\\Store\\Nav\\TopNav.js",[],"D:\\frontend-2\\src\\components\\Store\\Drawer\\RightDrawer.js",[],"D:\\frontend-2\\src\\components\\Store\\Footer\\BottomFooter.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\BestSellingBlock.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\FeaturedBookBlock.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\NewReleaseBlock.js",["355"],"D:\\frontend-2\\src\\components\\Store\\Block\\FavouriteAuthorBlock.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\FeaturedCategoryBlock.js",["356"],"D:\\frontend-2\\src\\components\\Store\\Block\\WeekDealBlock.js",[],"D:\\frontend-2\\src\\components\\Store\\Drawer\\LeftDrawer.js",[],"D:\\frontend-2\\src\\pages\\Store\\ForgotPassword.js",[],"D:\\frontend-2\\src\\components\\Store\\Rating.js",[],"D:\\frontend-2\\src\\components\\Store\\Nav\\Breadcrumb.js",[],"D:\\frontend-2\\src\\components\\Store\\ShortedProduct.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\SupportInfoBlock.js",["357"],"import {\r\n  Box,\r\n  HStack,\r\n  Icon,\r\n  StackDivider,\r\n  Text,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { FaCheckCircle, FaFacebookMessenger, FaRegMoneyBillAlt, FaShippingFast } from 'react-icons/fa';\r\n\r\nexport default function SupportInfoBlock() {\r\n  return (\r\n    <VStack\r\n      spacing={8}\r\n      borderWidth={1}\r\n      p={8}\r\n      align=\"flex-start\"\r\n      borderRadius=\"md\"\r\n    >\r\n      <HStack spacing={8}>\r\n        <Icon w={16} h={16} color=\"red.500\" as={FaShippingFast} />\r\n        <Box>\r\n          <Text fontWeight=\"bold\">Free Delivery</Text>\r\n          Orders over $100\r\n        </Box>\r\n      </HStack>\r\n\r\n      <HStack spacing={8}>\r\n        <Icon w={16} h={16} color=\"red.500\" as={FaRegMoneyBillAlt} />\r\n        <Box>\r\n          <Text fontWeight=\"bold\">Secure Payment</Text>100% Secure Payment\r\n        </Box>\r\n      </HStack>\r\n\r\n      <HStack spacing={8}>\r\n        <Icon w={16} h={16} color=\"red.500\" as={FaCheckCircle} />\r\n        <Box>\r\n          <Text fontWeight=\"bold\">Money Back Guarantee\r\n</Text>Within 30 Days\r\n         \r\n        </Box>\r\n      </HStack>\r\n\r\n      <HStack spacing={8}>\r\n        <Icon w={16} h={16} color=\"red.500\" as={FaFacebookMessenger} />\r\n        <Box>\r\n          <Text fontWeight=\"bold\">24/7 Support\r\n</Text>Within 1 Business Day\r\n        </Box>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Table.js",["358","359","360","361","362"],"import { Box, Heading, HStack, Icon, IconButton, Text } from '@chakra-ui/react';\r\nimport {\r\n  FaAngleDoubleLeft,\r\n  FaAngleDoubleRight,\r\n  FaAngleLeft,\r\n  FaAngleRight,\r\n} from 'react-icons/fa';\r\nimport React from 'react';\r\nimport { useExpanded, usePagination, useTable } from 'react-table';\r\n\r\nexport default function Table({\r\n  columns,\r\n  data,\r\n  action,\r\n  skipPageReset,\r\n  showPagination,\r\n  renderRowSubComponent,\r\n  ...rest\r\n}) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    visibleColumns,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize, expanded },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      autoResetPage: !skipPageReset,\r\n      ...action,\r\n    },\r\n    useExpanded,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box overflowX=\"auto\" borderRadius=\"md\" borderWidth={1}>\r\n        <Box w=\"full\" as=\"table\" {...rest} {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup, hgI) => (\r\n              <TRow key={hgI} {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column, hcI) => (\r\n                  <THeading key={hcI} {...column.getHeaderProps()}>\r\n                    {column.render('Header')}\r\n                  </THeading>\r\n                ))}\r\n              </TRow>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, rI) => {\r\n              prepareRow(row);\r\n              return (\r\n                <React.Fragment key={rI}>\r\n                  <TRow {...row.getRowProps()}>\r\n                    {row.cells.map((cell, cI) => {\r\n                      return (\r\n                        <TData key={cI} {...cell.getCellProps()}>\r\n                          {cell.render('Cell')}\r\n                        </TData>\r\n                      );\r\n                    })}\r\n                  </TRow>\r\n                  {row.isExpanded && (\r\n                    <TRow>\r\n                      <TData colSpan={visibleColumns.length}>\r\n                        {renderRowSubComponent({row})}\r\n                      </TData>\r\n                    </TRow>\r\n                  )}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot></tfoot>\r\n        </Box>\r\n      </Box>\r\n      {showPagination && (\r\n        <HStack my={4}>\r\n          <IconButton\r\n            colorScheme=\"blue\"\r\n            size=\"sm\"\r\n            disabled={!canPreviousPage}\r\n            icon={<Icon as={FaAngleDoubleLeft} />}\r\n            onClick={() => gotoPage(0)}\r\n          />\r\n          <IconButton\r\n            colorScheme=\"blue\"\r\n            size=\"sm\"\r\n            disabled={!canPreviousPage}\r\n            icon={<Icon as={FaAngleLeft} />}\r\n            onClick={() => previousPage()}\r\n          />\r\n          <IconButton\r\n            colorScheme=\"blue\"\r\n            size=\"sm\"\r\n            disabled={!canNextPage}\r\n            icon={<Icon as={FaAngleRight} />}\r\n            onClick={() => nextPage()}\r\n          />\r\n          <IconButton\r\n            colorScheme=\"blue\"\r\n            size=\"sm\"\r\n            disabled={!canNextPage}\r\n            icon={<Icon as={FaAngleDoubleRight} />}\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n          />\r\n        </HStack>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function THeading({ children, ...rest }) {\r\n  return (\r\n    <Heading\r\n      as=\"th\"\r\n      borderBottomWidth={3}\r\n      py={4}\r\n      px={2}\r\n      textAlign=\"left\"\r\n      size=\"md\"\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Heading>\r\n  );\r\n}\r\n\r\nexport function TData({ children, ...rest }) {\r\n  return (\r\n    <Text as=\"td\" borderBottomWidth={1} px={2} py={4} {...rest}>\r\n      {children}\r\n    </Text>\r\n  );\r\n}\r\n\r\nexport function TRow({ children, ...rest }) {\r\n  return (\r\n    <Box as=\"tr\" {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Store\\Form\\AddProductForm.js",["363","364","365","366","367","368","369","370"],"D:\\frontend-2\\src\\components\\Store\\Form\\RegisterForm.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\ShortedCartBlock.js",["371","372"],"import { Box, HStack, Icon, StackDivider, Text, VStack } from '@chakra-ui/react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nexport default function ShortedCartBlock() {\r\n  return (\r\n    <VStack align=\"stretch\" mb={4} borderWidth={1} p={4} borderRadius=\"md\" divider={<StackDivider />}>\r\n      <HStack justify=\"space-between\">\r\n        <Box>\r\n          <Text fontWeight=\"bold\">Product Name</Text>\r\n          <Text as=\"small\">x10</Text>\r\n        </Box>\r\n\r\n        <Text>\r\n          <CurrencyFormat\r\n            value={29.95}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        </Text>\r\n      </HStack>\r\n      <HStack justify=\"space-between\">\r\n        <Box>\r\n          <Text fontWeight=\"bold\">Product Name</Text>\r\n          <Text as=\"small\">x10</Text>\r\n        </Box>\r\n\r\n        <Text>\r\n          <CurrencyFormat\r\n            value={29.95}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        </Text>\r\n      </HStack>\r\n      <HStack justify=\"space-between\">\r\n        <Text fontWeight=\"bold\">NEWCODE <br/><Text color=\"red.500\" as=\"small\">Remove this code</Text></Text>\r\n        <Text fontWeight=\"bold\">\r\n          <CurrencyFormat\r\n            value={-5}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        </Text>\r\n      </HStack>\r\n      <HStack justify=\"space-between\">\r\n        <Text>Total</Text>\r\n        <Text fontWeight=\"bold\">\r\n          <CurrencyFormat\r\n            value={29.95}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        </Text>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Store\\Form\\PromoCodeForm.js",["373"],"import {\r\n    Button,\r\n    FormControl,\r\n    FormErrorMessage,\r\n    FormLabel,\r\n    HStack,\r\n    Input,\r\n  } from '@chakra-ui/react';\r\n  import { useForm, Controller } from 'react-hook-form';\r\n  \r\n  export default function PromoCodeForm() {\r\n    const { handleSubmit, errors, control } = useForm();\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit(data => console.log(data))}>\r\n        <HStack p={4} justify=\"space-between\" borderRadius=\"md\" borderWidth={1}>\r\n          <FormControl isInvalid={errors.promoCode}>\r\n            <Controller\r\n              id=\"promoCode\"\r\n              name=\"promoCode\"\r\n              as={Input}\r\n              placeholder=\"Please enter your promo code\"\r\n              defaultValue=\"\"\r\n              control={control}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <Button colorScheme=\"green\" type=\"submit\">\r\n            Redeem\r\n          </Button>\r\n        </HStack>\r\n      </form>\r\n    );\r\n  }\r\n  ","D:\\frontend-2\\src\\components\\Store\\Form\\RequestPasswordForm.js",["374"],"import {\r\n    Button,\r\n    FormControl,\r\n    FormErrorMessage,\r\n    FormLabel,\r\n    Input,\r\n    Text,\r\n    VStack,\r\n  } from '@chakra-ui/react';\r\n  import { useForm, Controller } from 'react-hook-form';\r\n  \r\n  export default function RequestPasswordForm() {\r\n    const { handleSubmit, errors, control } = useForm();\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit(data => console.log(data))}>\r\n        <VStack align=\"stretch\" p={4} borderWidth={1} borderRadius=\"md\">\r\n          <FormControl isInvalid={errors.email}>\r\n            <FormLabel htmlFor=\"email\">Email:</FormLabel>\r\n            <Controller\r\n              id=\"email\"\r\n              name=\"email\"\r\n              as={Input}\r\n              placeholder=\"Please enter your email\"\r\n              defaultValue=\"\"\r\n              rules={{ required: true, min: 6 }}\r\n              control={control}\r\n            />\r\n            <FormErrorMessage>This field is required</FormErrorMessage>\r\n          </FormControl>\r\n          <Button type=\"submit\">\r\n            Send Email\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    );\r\n  }\r\n  ","D:\\frontend-2\\src\\components\\Store\\Form\\ResetPasswordForm.js",[],["375","376"],"D:\\frontend-2\\src\\components\\Store\\Form\\CheckoutForm.js",["377","378","379","380","381","382","383"],"import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  HStack,\r\n  Input,\r\n  Select,\r\n  Text,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport csc from 'country-state-city';\r\nimport { useMemo, useState } from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\n\r\nexport default function CheckoutForm() {\r\n  const { handleSubmit, errors, control } = useForm();\r\n  const countries = useMemo(() => csc.getAllCountries(), []);\r\n  const [states, setStates] = useState(null);\r\n  const [cardError, setCardError] = useState(false);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const cardElementOptions = {\r\n    style: {\r\n      base: {\r\n        fontSize: '16px',\r\n        color: '#424770',\r\n        '::placeholder': {\r\n          color: '#aab7c4',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#9e2146',\r\n      },\r\n    },\r\n  };\r\n\r\n  async function createOrder({}) {\r\n    if (!stripe || !elements) return;\r\n\r\n    setCardError(false);\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // const { error, paymentIntent } = await stripe.confirmCardPayment(\r\n    //   \"1234\",\r\n    //   {\r\n    //     payment_method: {\r\n    //       card: cardElement,\r\n    //       billing_details: {\r\n    //       },\r\n    //     }\r\n    //   }\r\n    // );\r\n\r\n    const { error } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      //billing_details: billingDetails,\r\n    });\r\n\r\n    if (error) {\r\n      if (error.type === 'validation_error') {\r\n          setCardError(true);\r\n      }\r\n    } else {\r\n        \r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(data => createOrder(data))}>\r\n      <VStack align=\"flex-start\" p={4} borderWidth={1} borderRadius=\"md\">\r\n        <FormControl isInvalid={errors.name}>\r\n          <FormLabel htmlFor=\"name\">Fullname:</FormLabel>\r\n          <Controller\r\n            id=\"name\"\r\n            name=\"name\"\r\n            as={Input}\r\n            placeholder=\"Please enter your fullname\"\r\n            defaultValue=\"\"\r\n            rules={{ required: true, min: 6 }}\r\n            control={control}\r\n          />\r\n          <FormErrorMessage>This field is required</FormErrorMessage>\r\n        </FormControl>\r\n        <FormControl isInvalid={errors.address}>\r\n          <FormLabel htmlFor=\"address\">Address:</FormLabel>\r\n          <Controller\r\n            id=\"address\"\r\n            name=\"address\"\r\n            as={Input}\r\n            placeholder=\"Please enter your address\"\r\n            defaultValue=\"\"\r\n            rules={{ required: true, min: 6 }}\r\n            control={control}\r\n          />\r\n          <FormErrorMessage>This field is required</FormErrorMessage>\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"address2\">Address 2 (Optional):</FormLabel>\r\n          <Controller\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            as={Input}\r\n            placeholder=\"Please enter your addres 2\"\r\n            defaultValue=\"\"\r\n            control={control}\r\n          />\r\n        </FormControl>\r\n        <FormControl isInvalid={errors.phone}>\r\n          <FormLabel htmlFor=\"Phone\">Phone:</FormLabel>\r\n          <Controller\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            as={Input}\r\n            placeholder=\"Please enter your phone number\"\r\n            defaultValue=\"\"\r\n            control={control}\r\n            rules={{required: true, pattern: /[\\+]\\d{2}[\\(]\\d{2}[\\)]\\d{4}[\\-]\\d{4}/ }}\r\n          />\r\n          <FormErrorMessage>This field is required and phone number format</FormErrorMessage>\r\n        </FormControl>\r\n        <HStack>\r\n          <FormControl isInvalid={errors.country}>\r\n            <FormLabel htmlFor=\"country\">Country:</FormLabel>\r\n            <Controller\r\n              id=\"country\"\r\n              name=\"country\"\r\n              placeholder=\"Please enter your country\"\r\n              defaultValue=\"\"\r\n              rules={{ required: true }}\r\n              control={control}\r\n              render={props => (\r\n                <Select\r\n                  value={props.value}\r\n                  onChange={value => {\r\n                    if (value.target.value) {\r\n                      props.onChange(value);\r\n                      setStates(csc.getStatesOfCountry(value.target.value));\r\n                    }\r\n                  }}\r\n                >\r\n                  <option>Please enter your country</option>\r\n                  {countries.map(item => (\r\n                    <option key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            />\r\n          </FormControl>\r\n          <FormControl isInvalid={errors.state}>\r\n            <FormLabel htmlFor=\"state\">State/City:</FormLabel>\r\n            <Controller\r\n              id=\"state\"\r\n              name=\"state\"\r\n              defaultValue=\"\"\r\n              rules={{ required: true }}\r\n              control={control}\r\n              render={props => (\r\n                <Select\r\n                  isDisabled={!states}\r\n                  value={props.value}\r\n                  onChange={value => {\r\n                    props.onChange(value);\r\n                  }}\r\n                >\r\n                  <option>Please enter your state</option>\r\n                  {states &&\r\n                    states.map(item => (\r\n                      <option key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </option>\r\n                    ))}\r\n                </Select>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </HStack>\r\n        <FormControl>\r\n          <FormLabel>Payment: </FormLabel>\r\n          <Box\r\n            p={3}\r\n            borderWidth={cardError ? 2 : 1}\r\n            borderColor={cardError && 'red.500'}\r\n            borderRadius={8}\r\n          >\r\n            <CardElement\r\n              onChange={e => console.log(e)}\r\n              options={cardElementOptions}\r\n            />\r\n          </Box>\r\n        </FormControl>\r\n        <Button colorScheme=\"green\" type=\"submit\">\r\n          Order\r\n        </Button>\r\n      </VStack>\r\n    </form>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Store\\Form\\LoginForm.js",[],"D:\\frontend-2\\src\\components\\Store\\Block\\FilterBlock.js",["384","385","386"],"D:\\frontend-2\\src\\components\\Store\\Block\\FeaturedShortedProductBlock.js",[],"D:\\frontend-2\\src\\pages\\Store\\List.js",[],"D:\\frontend-2\\src\\pages\\Admin\\Route.js",["387"],"import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Gallery from './Gallery';\r\nimport Layout from './Layout';\r\nimport Category from './Category';\r\nimport Author from './Author';\r\nimport User from './User';\r\nimport ProductPage from './Product';\r\nimport OrderPage from './Order';\r\n\r\nconst menu = [\r\n  { name: 'Book', path: 'book' },\r\n  { name: 'Category', path: 'category' },\r\n  { name: 'Author', path: 'author' },\r\n  { name: 'Order', path: 'order' },\r\n  { name: 'User', path: 'user' },\r\n];\r\n\r\nexport default function AdminRoute() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/admin/dashboard\" component={Dashboard} />\r\n        <Route path=\"/admin/gallery\" component={Gallery} />\r\n        <Route path=\"/admin/category\" component={Category} />\r\n        <Route path=\"/admin/author\" component={Author} />\r\n        <Route path=\"/admin/user\" component={User} />\r\n        <Route path=\"/admin/book\" component={ProductPage} />\r\n        <Route path=\"/admin/order\" component={OrderPage} />\r\n        <Redirect to=\"/admin/dashboard\" />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\pages\\Admin\\Layout.js",["388"],"import {\r\n  Box,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  GridItem,\r\n  SimpleGrid,\r\n  useBreakpointValue,\r\n} from '@chakra-ui/react';\r\nimport { useState } from 'react';\r\nimport LeftNav from '../../components/Admin/Nav/LeftNav';\r\nimport TopNav from '../../components/Admin/Nav/TopNav';\r\n\r\nexport default function Layout({ children }) {\r\n  const enableDrawer = useBreakpointValue({\r\n    sm: true,\r\n    md: false,\r\n    lg: false,\r\n    xl: false,\r\n    base: true,\r\n  });\r\n\r\n  const [isOpen, setOpen] = useState(!enableDrawer);\r\n\r\n  function onToggle() {\r\n    setOpen(!isOpen);\r\n  }\r\n\r\n  function onClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={5}>\r\n        {isOpen && !enableDrawer && (\r\n          <GridItem>\r\n            <LeftNav/>\r\n          </GridItem>\r\n        )}\r\n        <GridItem colSpan={enableDrawer ? 5 : isOpen ? 4 : 5}>\r\n          <TopNav onToggle={onToggle} />\r\n          <Box p={4}>{children}</Box>\r\n        </GridItem>\r\n      </SimpleGrid>\r\n      <Drawer\r\n        isOpen={isOpen && enableDrawer}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent >\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>Menu</DrawerHeader>\r\n            <LeftNav onClose={onClose}/>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Admin\\Nav\\LeftNav.js",[],"D:\\frontend-2\\src\\components\\Admin\\Nav\\TopNav.js",[],"D:\\frontend-2\\src\\pages\\Admin\\Dashboard.js",[],"D:\\frontend-2\\src\\components\\Store\\Footer\\TopFooter.js",[],"D:\\frontend-2\\src\\components\\Admin\\BlockLayout.js",[],"D:\\frontend-2\\src\\pages\\Admin\\Gallery.js",[],"D:\\frontend-2\\src\\pages\\Admin\\Category.js",["389","390","391"],"import { useMemo, useState } from 'react';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Table from '../../components/Table';\r\nimport * as FcIcon from 'react-icons/fc';\r\nimport { Button, Input, Select } from '@chakra-ui/react';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport customInput from '../../hocs/customInput';\r\n\r\nexport default function Category() {\r\n  const iconNameList = useMemo(() => Object.keys(FcIcon), []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Icon',\r\n        accessor: 'icon',\r\n        Cell: data => {\r\n          const IconSelect = customInput(Select, data);\r\n          return (\r\n            <IconSelect>\r\n              {iconNameList.map((item, i) => (\r\n                <option value={item} key={i}>\r\n                  {item}\r\n                </option>\r\n              ))}\r\n            </IconSelect>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: data => {\r\n          const NameInput = customInput(Input, data, ['required']);\r\n          return <NameInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Parent',\r\n        accessor: 'parent.name',\r\n        id: \"parent\",\r\n        Cell: data => {\r\n          const ParentInput = customInput(Select, data);\r\n          return <ParentInput>\r\n            <option value=\"A\">A</option>\r\n            <option value=\"B\">B</option>\r\n            <option value=\"C\">C</option>\r\n          </ParentInput>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <ConfirmButton size=\"sm\" colorScheme=\"red\" buttonText=\"Delete\" />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = useMemo(\r\n    () => [\r\n      {\r\n        name: 'ABC',\r\n        icon: 'FcAlarmClock',\r\n        id: '1',\r\n        parent: { name: 'Parent' },\r\n      },\r\n      {\r\n        name: 'ABFC',\r\n        icon: 'FcAlarmClock',\r\n        id: '2',\r\n        parent: { name: 'Parent 2' },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Category Table\">\r\n      <Table columns={columns} data={data} />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\ConfirmButton.js",[],"D:\\frontend-2\\src\\hocs\\customInput.js",["392","393","394"],"import { HStack, Icon, IconButton, Tooltip } from '@chakra-ui/react';\r\nimport { useMemo, useRef, useState } from 'react';\r\nimport { FcLock } from 'react-icons/fc';\r\n\r\nexport default function (\r\n  Comp,\r\n  { value: initialValue, column },\r\n  rules = null,\r\n  clickToEdit = false,\r\n  size = 'sm'\r\n) {\r\n  return ({ children, ...rest }) => {\r\n    const [isEdit, setEdit] = useState(!clickToEdit);\r\n    const [value, setValue] = useState(initialValue || '');\r\n    const [error, setError] = useState(false);\r\n    const [errorLabel, setErrorLabel] = useState('');\r\n    const input = useRef(null);\r\n\r\n    const props = useMemo(\r\n      () => ({\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        ref: input,\r\n        size,\r\n        isInvalid: error,\r\n      }),\r\n      [value, error]\r\n    );\r\n\r\n    function onChange(e) {\r\n      setValue(e.target.value);\r\n    }\r\n\r\n    function onBlur(e) {\r\n      if (rules) {\r\n        const value = e.target.value.toString().trim();\r\n        for (const rule of rules) {\r\n          switch (rule) {\r\n            case 'required':\r\n              if (value === '') {\r\n                input.current.focus();\r\n                setError(true);\r\n                setErrorLabel('This field is required');\r\n                return;\r\n              }\r\n              break;\r\n            case 'email':\r\n              if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n                input.current.focus();\r\n                setError(true);\r\n                setErrorLabel('This field is a email');\r\n                return;\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n      setError(false);\r\n      console.log(column.id, value, 'Save');\r\n    }\r\n\r\n    return (\r\n      <Tooltip\r\n        colorScheme=\"red\"\r\n        label={errorLabel}\r\n        isOpen={error}\r\n        shouldWrapChildren\r\n        hasArrow={true}\r\n      >\r\n        <HStack>\r\n          {children ? (\r\n            <Comp {...rest} {...props} isDisabled={!isEdit}>\r\n              {children}\r\n            </Comp>\r\n          ) : (\r\n            <Comp {...rest} {...props} isDisabled={!isEdit} />\r\n          )}\r\n          {clickToEdit && !isEdit && <IconButton size=\"sm\" icon={<Icon as={FcLock} />} onClick={() => setEdit(true)}/>}\r\n        </HStack>\r\n      </Tooltip>\r\n    );\r\n  };\r\n}\r\n","D:\\frontend-2\\src\\pages\\Admin\\Author.js",["395","396","397"],"import { useMemo, useState } from 'react';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Table from '../../components/Table';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Input,\r\n  Select,\r\n  Textarea,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport customInput from '../../hocs/customInput';\r\nimport GalleryModal from '../../components/Admin/GalleryModal';\r\n\r\nexport default function Author() {\r\n  const { isOpen, onClose, onOpen } = useDisclosure();\r\n  const [dataAvatar, setDataAvatar] = useState(null);\r\n\r\n  function openModal(data) {\r\n    onOpen();\r\n    setDataAvatar(data);\r\n    console.log(data);\r\n  }\r\n\r\n  function onInsert(ids) {\r\n    if (ids.length === 1) {\r\n      console.log(ids);\r\n      console.log(dataAvatar);\r\n      setDataAvatar(null);\r\n    }\r\n    onClose();\r\n  }\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Avatar',\r\n        accessor: 'avatar',\r\n        Cell: data => {\r\n          return <Avatar onClick={() => openModal(data)} />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: data => {\r\n          const NameInput = customInput(Input, data, ['required']);\r\n          return <NameInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Description',\r\n        accessor: 'description',\r\n        id: 'description',\r\n        Cell: data => {\r\n          const DescInput = customInput(Textarea, data);\r\n          return <DescInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <ConfirmButton size=\"sm\" colorScheme=\"red\" buttonText=\"Delete\" />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = useMemo(\r\n    () => [\r\n      {\r\n        name: 'ABC',\r\n        icon: 'FcAlarmClock',\r\n        id: '1',\r\n        description: 'This is author',\r\n      },\r\n      {\r\n        name: 'ABFC',\r\n        icon: 'FcAlarmClock',\r\n        id: '2',\r\n        description: 'This is author',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Author Table\">\r\n      <Table columns={columns} data={data} />\r\n      <GalleryModal isOpen={isOpen} onClose={onClose} onInsert={onInsert} />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Gallery.js",["398","399","400"],"import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  HStack,\r\n  Image,\r\n  SimpleGrid,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { request } from '../graphqlClient';\r\nimport ConfirmButton from '../components/ConfirmButton';\r\n\r\nfunction Item({ public_id, secure_url, onChange, isDisabled }) {\r\n  function handleChange(e) {\r\n    if (e.target.checked === true) {\r\n      onChange(true, { public_id, secure_url });\r\n    } else {\r\n      onChange(false, { public_id });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <VStack p={4} borderWidth={1} borderRadius=\"md\">\r\n      <Image objectFit=\"contain\" h={150} src={secure_url} />\r\n      <Checkbox\r\n        onChange={handleChange}\r\n        colorScheme=\"green\"\r\n        isDisabled={isDisabled}\r\n      ></Checkbox>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default function Gallery({ dialog, onInsert, multiple = true }) {\r\n  const [images, setImages] = useState([]);\r\n  const [ids, setIds] = useState([]);\r\n  const [cursor, setCursor] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const input = useRef(null);\r\n\r\n  async function handleUpload(e) {\r\n    const query = `\r\n      mutation($files: [Upload!]) {\r\n        uploadImages(files: $files) {\r\n          public_id\r\n        }\r\n      }\r\n    `;\r\n\r\n    try {\r\n      const result = await request(query, {\r\n        files: Array.from(e.target.files),\r\n      });\r\n\r\n      await fetchImages(true);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError('Upload Error');\r\n    } finally {\r\n      input.current.value = '';\r\n    }\r\n  }\r\n\r\n  async function handleDelete() {\r\n    if (ids.length === 0) return;\r\n\r\n    const query = `\r\n      mutation($public_ids: [String!]) {\r\n        removeImages(public_ids: $public_ids)\r\n      }\r\n    `;\r\n\r\n    try {\r\n      const result = await request(query, {\r\n        public_ids: ids.map(item => item.public_id),\r\n      });\r\n      setIds([]);\r\n      setError(null);\r\n      await fetchImages(true);\r\n    } catch (error) {\r\n      setError('Delete Error');\r\n    }\r\n  }\r\n\r\n  async function fetchImages(reset) {\r\n    const query = `\r\n      query {\r\n        getImages {\r\n          list {\r\n            secure_url\r\n            public_id\r\n          }\r\n        }\r\n      }\r\n    `;\r\n    const {\r\n      getImages: { list, next_cursor },\r\n    } = await request(query);\r\n\r\n    setCursor(next_cursor);\r\n    if (reset) {\r\n      setImages([...list]);\r\n    } else {\r\n      setImages([...list, ...images]);\r\n    }\r\n  }\r\n\r\n  function handleSelect(isAdd, img) {\r\n    if (isAdd) {\r\n      if (multiple) {\r\n        setIds([img, ...ids]);\r\n      } else {\r\n        setIds([img]);\r\n      }\r\n    } else {\r\n      setIds(ids.filter(item => item.public_id !== img.public_id));\r\n    }\r\n  }\r\n\r\n  function handleInsert() {\r\n    if (!multiple) {\r\n      if (ids.length > 1) {\r\n        alert('Only 1');\r\n        return;\r\n      }\r\n    }\r\n    onInsert(ids);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchImages(true);\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        type=\"file\"\r\n        id=\"gallery\"\r\n        multiple\r\n        ref={input}\r\n        onChange={handleUpload}\r\n      />\r\n\r\n      {error && (\r\n        <Box mt={4} textColor=\"red.500\">\r\n          {error}\r\n        </Box>\r\n      )}\r\n\r\n      <HStack mt={4}>\r\n        {dialog && (\r\n          <Button colorScheme=\"blue\" onClick={handleInsert}>\r\n            Insert\r\n          </Button>\r\n        )}\r\n        <ConfirmButton\r\n          colorScheme=\"red\"\r\n          buttonText=\"Delete\"\r\n          onAccept={handleDelete}\r\n        />\r\n      </HStack>\r\n\r\n      <SimpleGrid\r\n        columns={dialog ? [1, 1, 2] : [1, 2, 3, 4]}\r\n        gap={4}\r\n        mt={4}\r\n        alignItems=\"center\"\r\n      >\r\n        {images.map(image => (\r\n          <Item onChange={handleSelect} key={image.public_id} {...image} />\r\n        ))}\r\n        {cursor && <Button onClick={() => fetchImages()}>Show more</Button>}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\components\\Admin\\GalleryModal.js",[],"D:\\frontend-2\\src\\pages\\Admin\\User.js",["401","402","403","404","405","406"],"import { useMemo, useState } from 'react';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport Table from '../../components/Table';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  Input,\r\n  Select,\r\n  Textarea,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport customInput from '../../hocs/customInput';\r\n\r\nexport default function User() {\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: data => {\r\n          const NameInput = customInput(Input, data, ['required']);\r\n          return <NameInput />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: 'email',\r\n        id: 'email',\r\n        Cell: data => {\r\n          const EmailInput = customInput(Input, data, ['required', 'email']);\r\n          return <EmailInput/>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Admin',\r\n        accessor: 'isAdmin',\r\n        id: 'isAdmin',\r\n        Cell: data => {\r\n          const AdminCheckbox = customInput(Checkbox, data);\r\n          return <AdminCheckbox />;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Password',\r\n        accessor: 'password',\r\n        id: 'password',\r\n        Cell: data => {\r\n          const PasswordInput = customInput(Input, data, ['required'], true);\r\n          return <PasswordInput type=\"password\" placeholder=\"Click lock icon to edit\"/>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <ConfirmButton size=\"sm\" colorScheme=\"red\" buttonText=\"Delete\" />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = useMemo(\r\n    () => [\r\n      {\r\n        name: 'ABC',\r\n        email: 'abc@abc.com',\r\n        id: '1',\r\n        isAdmin: true\r\n      },\r\n      {\r\n        name: 'ABFC',\r\n        icon: 'FcAlarmClock',\r\n        id: '2',\r\n        isAdmin: false\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <BlockLayout blockName=\"User Table\">\r\n      <Table columns={columns} data={data} />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\pages\\Admin\\Order.js",["407"],"import { Button, HStack } from '@chakra-ui/react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport BlockLayout from '../../components/Admin/BlockLayout';\r\nimport ConfirmButton from '../../components/ConfirmButton';\r\nimport Table from '../../components/Table';\r\nimport OrderEditForm from '../../components/Admin/Form/OrderEditForm';\r\n\r\nexport default function OrderPage() {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Total',\r\n        accessor: 'total',\r\n        Cell: ({ value }) => (\r\n          <CurrencyFormat\r\n            value={value}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            prefix={'$'}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Address',\r\n        accessor: 'address',\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value, row }) => {\r\n          return (\r\n            <HStack>\r\n              <Button\r\n                as=\"span\"\r\n                {...row.getToggleRowExpandedProps()}\r\n                size=\"sm\"\r\n                colorScheme=\"green\"\r\n              >\r\n                Edit\r\n              </Button>\r\n              <ConfirmButton buttonText=\"Delete\" colorScheme=\"red\" size=\"sm\" />\r\n            </HStack>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = useMemo(\r\n    () => [\r\n      {\r\n        name: 'Book 1',\r\n        total: 1234,\r\n        address: 'abc city',\r\n        status: 'ordered',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const renderRowSubComponent = useCallback((row) => (<OrderEditForm row={row}/>));\r\n\r\n  return (\r\n    <BlockLayout blockName=\"Order Table\">\r\n      <Table columns={columns} showPagination={true} renderRowSubComponent={renderRowSubComponent} data={data} />\r\n    </BlockLayout>\r\n  );\r\n}\r\n","D:\\frontend-2\\src\\graphqlClient.js",[],"D:\\frontend-2\\src\\pages\\Admin\\Product.js",[],"D:\\frontend-2\\src\\components\\Admin\\Form\\ProductEditForm.js",[],"D:\\frontend-2\\src\\components\\Admin\\ImagePicker.js",[],"D:\\frontend-2\\src\\components\\Admin\\Form\\OrderEditForm.js",[],"D:\\frontend-2\\src\\components\\Admin\\ProductPicker.js",["408"],"D:\\frontend-2\\src\\context.js",[],"D:\\frontend-2\\src\\api.js",[],{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":24},{"ruleId":"413","severity":1,"message":"417","line":7,"column":3,"nodeType":"415","messageId":"416","endLine":7,"endColumn":9},{"ruleId":"413","severity":1,"message":"418","line":8,"column":3,"nodeType":"415","messageId":"416","endLine":8,"endColumn":7},{"ruleId":"413","severity":1,"message":"419","line":26,"column":10,"nodeType":"415","messageId":"416","endLine":26,"endColumn":17},{"ruleId":"413","severity":1,"message":"420","line":26,"column":19,"nodeType":"415","messageId":"416","endLine":26,"endColumn":26},{"ruleId":"413","severity":1,"message":"421","line":30,"column":10,"nodeType":"415","messageId":"416","endLine":30,"endColumn":20},{"ruleId":"422","severity":1,"message":"423","line":57,"column":6,"nodeType":"424","endLine":57,"endColumn":8,"suggestions":"425"},{"ruleId":"422","severity":1,"message":"426","line":43,"column":6,"nodeType":"424","endLine":43,"endColumn":8,"suggestions":"427"},{"ruleId":"409","replacedBy":"428"},{"ruleId":"411","replacedBy":"429"},{"ruleId":"413","severity":1,"message":"430","line":2,"column":3,"nodeType":"415","messageId":"416","endLine":2,"endColumn":9},{"ruleId":"413","severity":1,"message":"431","line":7,"column":3,"nodeType":"415","messageId":"416","endLine":7,"endColumn":10},{"ruleId":"413","severity":1,"message":"432","line":10,"column":22,"nodeType":"415","messageId":"416","endLine":10,"endColumn":33},{"ruleId":"413","severity":1,"message":"433","line":19,"column":10,"nodeType":"415","messageId":"416","endLine":19,"endColumn":17},{"ruleId":"422","severity":1,"message":"426","line":38,"column":6,"nodeType":"424","endLine":38,"endColumn":16,"suggestions":"434"},{"ruleId":"422","severity":1,"message":"426","line":42,"column":6,"nodeType":"424","endLine":42,"endColumn":8,"suggestions":"435"},{"ruleId":"413","severity":1,"message":"436","line":12,"column":3,"nodeType":"415","messageId":"416","endLine":12,"endColumn":9},{"ruleId":"409","replacedBy":"437"},{"ruleId":"411","replacedBy":"438"},{"ruleId":"413","severity":1,"message":"439","line":1,"column":36,"nodeType":"415","messageId":"416","endLine":1,"endColumn":49},{"ruleId":"413","severity":1,"message":"418","line":1,"column":39,"nodeType":"415","messageId":"416","endLine":1,"endColumn":43},{"ruleId":"413","severity":1,"message":"419","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":17},{"ruleId":"409","replacedBy":"440"},{"ruleId":"411","replacedBy":"441"},{"ruleId":"413","severity":1,"message":"417","line":1,"column":29,"nodeType":"415","messageId":"416","endLine":1,"endColumn":35},{"ruleId":"409","replacedBy":"442"},{"ruleId":"411","replacedBy":"443"},{"ruleId":"413","severity":1,"message":"444","line":3,"column":3,"nodeType":"415","messageId":"416","endLine":3,"endColumn":7},{"ruleId":"413","severity":1,"message":"445","line":12,"column":3,"nodeType":"415","messageId":"416","endLine":12,"endColumn":7},{"ruleId":"413","severity":1,"message":"446","line":13,"column":3,"nodeType":"415","messageId":"416","endLine":13,"endColumn":13},{"ruleId":"413","severity":1,"message":"447","line":14,"column":3,"nodeType":"415","messageId":"416","endLine":14,"endColumn":11},{"ruleId":"413","severity":1,"message":"448","line":15,"column":3,"nodeType":"415","messageId":"416","endLine":15,"endColumn":11},{"ruleId":"413","severity":1,"message":"436","line":18,"column":3,"nodeType":"415","messageId":"416","endLine":18,"endColumn":9},{"ruleId":"413","severity":1,"message":"449","line":3,"column":3,"nodeType":"415","messageId":"416","endLine":3,"endColumn":7},{"ruleId":"413","severity":1,"message":"450","line":3,"column":18,"nodeType":"415","messageId":"416","endLine":3,"endColumn":25},{"ruleId":"413","severity":1,"message":"451","line":5,"column":3,"nodeType":"415","messageId":"416","endLine":5,"endColumn":15},{"ruleId":"413","severity":1,"message":"452","line":29,"column":5,"nodeType":"415","messageId":"416","endLine":29,"endColumn":16},{"ruleId":"413","severity":1,"message":"453","line":34,"column":5,"nodeType":"415","messageId":"416","endLine":34,"endColumn":16},{"ruleId":"413","severity":1,"message":"454","line":35,"column":14,"nodeType":"415","messageId":"416","endLine":35,"endColumn":23},{"ruleId":"413","severity":1,"message":"455","line":35,"column":25,"nodeType":"415","messageId":"416","endLine":35,"endColumn":33},{"ruleId":"413","severity":1,"message":"456","line":35,"column":35,"nodeType":"415","messageId":"416","endLine":35,"endColumn":43},{"ruleId":"413","severity":1,"message":"430","line":2,"column":3,"nodeType":"415","messageId":"416","endLine":2,"endColumn":9},{"ruleId":"413","severity":1,"message":"457","line":3,"column":3,"nodeType":"415","messageId":"416","endLine":3,"endColumn":14},{"ruleId":"413","severity":1,"message":"458","line":4,"column":3,"nodeType":"415","messageId":"416","endLine":4,"endColumn":19},{"ruleId":"413","severity":1,"message":"459","line":5,"column":3,"nodeType":"415","messageId":"416","endLine":5,"endColumn":12},{"ruleId":"413","severity":1,"message":"460","line":14,"column":3,"nodeType":"415","messageId":"416","endLine":14,"endColumn":9},{"ruleId":"413","severity":1,"message":"436","line":15,"column":3,"nodeType":"415","messageId":"416","endLine":15,"endColumn":9},{"ruleId":"413","severity":1,"message":"461","line":18,"column":31,"nodeType":"415","messageId":"416","endLine":18,"endColumn":40},{"ruleId":"413","severity":1,"message":"462","line":29,"column":25,"nodeType":"415","messageId":"416","endLine":29,"endColumn":31},{"ruleId":"413","severity":1,"message":"418","line":1,"column":23,"nodeType":"415","messageId":"416","endLine":1,"endColumn":27},{"ruleId":"413","severity":1,"message":"463","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":17},{"ruleId":"413","severity":1,"message":"459","line":5,"column":5,"nodeType":"415","messageId":"416","endLine":5,"endColumn":14},{"ruleId":"413","severity":1,"message":"464","line":7,"column":5,"nodeType":"415","messageId":"416","endLine":7,"endColumn":9},{"ruleId":"409","replacedBy":"465"},{"ruleId":"411","replacedBy":"466"},{"ruleId":"413","severity":1,"message":"464","line":10,"column":3,"nodeType":"415","messageId":"416","endLine":10,"endColumn":7},{"ruleId":"467","severity":1,"message":"468","line":41,"column":30,"nodeType":"469","messageId":"470","endLine":41,"endColumn":32},{"ruleId":"413","severity":1,"message":"471","line":45,"column":11,"nodeType":"415","messageId":"416","endLine":45,"endColumn":22},{"ruleId":"472","severity":1,"message":"473","line":122,"column":48,"nodeType":"474","messageId":"475","endLine":122,"endColumn":49,"suggestions":"476"},{"ruleId":"472","severity":1,"message":"477","line":122,"column":57,"nodeType":"474","messageId":"475","endLine":122,"endColumn":58,"suggestions":"478"},{"ruleId":"472","severity":1,"message":"479","line":122,"column":66,"nodeType":"474","messageId":"475","endLine":122,"endColumn":67,"suggestions":"480"},{"ruleId":"472","severity":1,"message":"481","line":122,"column":75,"nodeType":"474","messageId":"475","endLine":122,"endColumn":76,"suggestions":"482"},{"ruleId":"413","severity":1,"message":"483","line":23,"column":10,"nodeType":"415","messageId":"416","endLine":23,"endColumn":20},{"ruleId":"413","severity":1,"message":"484","line":23,"column":22,"nodeType":"415","messageId":"416","endLine":23,"endColumn":30},{"ruleId":"422","severity":1,"message":"485","line":60,"column":6,"nodeType":"424","endLine":60,"endColumn":24,"suggestions":"486"},{"ruleId":"413","severity":1,"message":"487","line":11,"column":7,"nodeType":"415","messageId":"416","endLine":11,"endColumn":11},{"ruleId":"413","severity":1,"message":"488","line":4,"column":3,"nodeType":"415","messageId":"416","endLine":4,"endColumn":13},{"ruleId":"413","severity":1,"message":"489","line":1,"column":19,"nodeType":"415","messageId":"416","endLine":1,"endColumn":27},{"ruleId":"413","severity":1,"message":"430","line":5,"column":10,"nodeType":"415","messageId":"416","endLine":5,"endColumn":16},{"ruleId":"422","severity":1,"message":"490","line":59,"column":5,"nodeType":"424","endLine":59,"endColumn":7,"suggestions":"491"},{"ruleId":"492","severity":1,"message":"493","line":5,"column":1,"nodeType":"494","endLine":85,"endColumn":2},{"ruleId":"422","severity":1,"message":"495","line":28,"column":7,"nodeType":"424","endLine":28,"endColumn":21,"suggestions":"496"},{"ruleId":"497","severity":1,"message":"498","line":39,"column":11,"nodeType":"499","messageId":"500","endLine":56,"endColumn":12},{"ruleId":"413","severity":1,"message":"430","line":6,"column":3,"nodeType":"415","messageId":"416","endLine":6,"endColumn":9},{"ruleId":"413","severity":1,"message":"460","line":8,"column":3,"nodeType":"415","messageId":"416","endLine":8,"endColumn":9},{"ruleId":"422","severity":1,"message":"501","line":69,"column":5,"nodeType":"424","endLine":69,"endColumn":7,"suggestions":"502"},{"ruleId":"413","severity":1,"message":"503","line":52,"column":13,"nodeType":"415","messageId":"416","endLine":52,"endColumn":19},{"ruleId":"413","severity":1,"message":"503","line":75,"column":13,"nodeType":"415","messageId":"416","endLine":75,"endColumn":19},{"ruleId":"422","severity":1,"message":"504","line":133,"column":6,"nodeType":"424","endLine":133,"endColumn":8,"suggestions":"505"},{"ruleId":"413","severity":1,"message":"489","line":1,"column":19,"nodeType":"415","messageId":"416","endLine":1,"endColumn":27},{"ruleId":"413","severity":1,"message":"506","line":5,"column":3,"nodeType":"415","messageId":"416","endLine":5,"endColumn":9},{"ruleId":"413","severity":1,"message":"430","line":6,"column":3,"nodeType":"415","messageId":"416","endLine":6,"endColumn":9},{"ruleId":"413","severity":1,"message":"460","line":9,"column":3,"nodeType":"415","messageId":"416","endLine":9,"endColumn":9},{"ruleId":"413","severity":1,"message":"507","line":10,"column":3,"nodeType":"415","messageId":"416","endLine":10,"endColumn":11},{"ruleId":"413","severity":1,"message":"439","line":11,"column":3,"nodeType":"415","messageId":"416","endLine":11,"endColumn":16},{"ruleId":"422","severity":1,"message":"508","line":71,"column":33,"nodeType":"415","endLine":71,"endColumn":44},{"ruleId":"413","severity":1,"message":"509","line":8,"column":17,"nodeType":"415","messageId":"416","endLine":8,"endColumn":25},"no-native-reassign",["510"],"no-negated-in-lhs",["511"],"no-unused-vars","'FaNetworkWired' is defined but never used.","Identifier","unusedVar","'HStack' is defined but never used.","'Icon' is defined but never used.","'FaHeart' is defined but never used.","'FaShare' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["512"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["513"],["510"],["511"],"'Button' is defined but never used.","'Spinner' is defined but never used.","'useLocation' is defined but never used.","'hasMore' is assigned a value but never used.",["514"],["515"],"'VStack' is defined but never used.",["510"],["511"],"'useDisclosure' is defined but never used.",["510"],["511"],["510"],["511"],"'Flex' is defined but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'Grid' is defined but never used.","'Heading' is defined but never used.","'StackDivider' is defined but never used.","'pageOptions' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'expanded' is assigned a value but never used.","'FormControl' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormLabel' is defined but never used.","'Select' is defined but never used.","'FaRegUser' is defined but never used.","'errors' is assigned a value but never used.","'FaTimes' is defined but never used.","'Text' is defined but never used.",["510"],["511"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'cardElement' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["516","517"],"Unnecessary escape character: \\(.",["518","519"],"Unnecessary escape character: \\).",["520","521"],"Unnecessary escape character: \\-.",["522","523"],"'priceRange' is assigned a value but never used.","'setRange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.search' and 'push'. Either include them or remove the dependency array.",["524"],"'menu' is assigned a value but never used.","'DrawerBody' is defined but never used.","'useState' is defined but never used.","React Hook useMemo has a missing dependency: 'iconNameList'. Either include it or remove the dependency array.",["525"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useMemo has a missing dependency: 'onBlur'. Either include it or remove the dependency array.",["526"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useMemo has a missing dependency: 'openModal'. Either include it or remove the dependency array.",["527"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.",["528"],"'Avatar' is defined but never used.","'Textarea' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"531","fix":"535"},{"messageId":"536","fix":"537","desc":"538"},{"messageId":"539","fix":"540","desc":"541"},{"messageId":"536","fix":"542","desc":"538"},{"messageId":"539","fix":"543","desc":"541"},{"messageId":"536","fix":"544","desc":"538"},{"messageId":"539","fix":"545","desc":"541"},{"messageId":"536","fix":"546","desc":"538"},{"messageId":"539","fix":"547","desc":"541"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},"Update the dependencies array to be: [slug]",{"range":"558","text":"559"},"Update the dependencies array to be: [fetchData]",{"range":"560","text":"561"},"Update the dependencies array to be: [fetchData, location]",{"range":"562","text":"563"},{"range":"564","text":"561"},"removeEscape",{"range":"565","text":"566"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"567","text":"568"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"569","text":"566"},{"range":"570","text":"568"},{"range":"571","text":"566"},{"range":"572","text":"568"},{"range":"573","text":"566"},{"range":"574","text":"568"},"Update the dependencies array to be: [category, author, push, location.search]",{"range":"575","text":"576"},"Update the dependencies array to be: [iconNameList]",{"range":"577","text":"578"},"Update the dependencies array to be: [value, onBlur, error]",{"range":"579","text":"580"},"Update the dependencies array to be: [openModal]",{"range":"581","text":"582"},"Update the dependencies array to be: [fetchImages]",{"range":"583","text":"584"},[1684,1686],"[slug]",[1334,1336],"[fetchData]",[1073,1083],"[fetchData, location]",[1133,1135],[3543,3544],"",[3543,3543],"\\",[3552,3553],[3552,3552],[3561,3562],[3561,3561],[3570,3571],[3570,3570],[1710,1728],"[category, author, push, location.search]",[1729,1731],"[iconNameList]",[769,783],"[value, onBlur, error]",[1736,1738],"[openModal]",[2939,2941],"[fetchImages]"]